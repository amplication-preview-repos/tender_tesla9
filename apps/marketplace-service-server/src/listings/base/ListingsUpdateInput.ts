/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  IsNumber,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { MaterialsWhereUniqueInput } from "../../materials/base/MaterialsWhereUniqueInput";
import { OrdersUpdateManyWithoutListingsItemsInput } from "./OrdersUpdateManyWithoutListingsItemsInput";
import { ServiceProvidersWhereUniqueInput } from "../../serviceProviders/base/ServiceProvidersWhereUniqueInput";

@InputType()
class ListingsUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  availableFrom?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  availableTo?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  geoLocation?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  latitude?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  longitude?: number | null;

  @ApiProperty({
    required: false,
    type: () => MaterialsWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MaterialsWhereUniqueInput)
  @IsOptional()
  @Field(() => MaterialsWhereUniqueInput, {
    nullable: true,
  })
  material?: MaterialsWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => OrdersUpdateManyWithoutListingsItemsInput,
  })
  @ValidateNested()
  @Type(() => OrdersUpdateManyWithoutListingsItemsInput)
  @IsOptional()
  @Field(() => OrdersUpdateManyWithoutListingsItemsInput, {
    nullable: true,
  })
  ordersItems?: OrdersUpdateManyWithoutListingsItemsInput;

  @ApiProperty({
    required: false,
    type: () => ServiceProvidersWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ServiceProvidersWhereUniqueInput)
  @IsOptional()
  @Field(() => ServiceProvidersWhereUniqueInput, {
    nullable: true,
  })
  serviceProvider?: ServiceProvidersWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;
}

export { ListingsUpdateInput as ListingsUpdateInput };
