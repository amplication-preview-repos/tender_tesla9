syntax = "proto3";

                 package customers;
service CustomersService {
 rpc createCustomers (CustomersCreateInput) returns (Customers) {}
rpc customersItems (findManyParams) returns (stream Customers) {}
rpc customers (CustomersWhereUniqueInput) returns (Customers) {}
rpc updateCustomers (CustomersUpdateInput) returns (Customers) {}
rpc deleteCustomers (CustomersWhereUniqueInput) returns (Customers) {}
rpc findManyCustomer (CustomersWhereUniqueInput) returns (stream Orders) {}
rpc updateCustomer (OrdersParams) returns (stream Orders) {}
rpc connectCustomer (OrdersParams) returns (Orders) {}
rpc disconnectCustomer (OrdersParams) returns (Orders) {} 
 }
message CustomersCreateInput {
string createdAt = 1;
string email = 2;
string firstName = 3;
string id = 4;
string lastName = 5;
repeated Orders ordersItems = 6;
string phoneNumber = 7;
string updatedAt = 8;
};
message Customers {
string createdAt = 1;
string email = 2;
string firstName = 3;
string id = 4;
string lastName = 5;
repeated Orders ordersItems = 6;
string phoneNumber = 7;
string updatedAt = 8;
};
message CustomersWhereUniqueInput {
string createdAt = 1;
string email = 2;
string firstName = 3;
string id = 4;
string lastName = 5;
repeated Orders ordersItems = 6;
string phoneNumber = 7;
string updatedAt = 8;
};
message CustomersUpdateInput {
string createdAt = 1;
string email = 2;
string firstName = 3;
string id = 4;
string lastName = 5;
repeated Orders ordersItems = 6;
string phoneNumber = 7;
string updatedAt = 8;
};
message findManyParams {

};
message Orders {
string createdAt = 1;
string id = 2;
string orderDate = 3;
int32 quantity = 4;
int32 totalPrice = 5;
string updatedAt = 6;
};
message OrdersWhereUniqueInput {
string createdAt = 1;
string id = 2;
string orderDate = 3;
int32 quantity = 4;
int32 totalPrice = 5;
string updatedAt = 6;
};
message OrdersParams {
CustomersWhereUniqueInput customersWhereUniqueInput = 1;
OrdersWhereUniqueInput ordersWhereUniqueInput = 2;
};